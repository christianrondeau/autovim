#!/usr/bin/env bash

ParamsArray=''
ReadFromStdIn=true
for i in "$@"; do 
	# Check if we need to read from stdin
	if [[ $i == "-i" || $i == "--in" || $i == "-ni" || $i == "--no-in"  ]] ; then
		ReadFromStdIn=false
	fi

	# Escape input parameters ad put in a comma separated atring list
  i="${i//\\/\\\\}"
  ParamsArray="$ParamsArray\"${i//\"/\\\"}\","
done

# Read from stdin
if [ $ReadFromStdIn = true ]; then
	StdInTempFile=$(mktemp)
	while read input; do
		echo $input | tee -a "$StdInTempFile" > /dev/null
	done
  ParamsArray="$ParamsArray\"--in\",\"$StdInTempFile\","
fi

# Prepare a file if stdout is required
StdOutTempFile=$(mktemp -u)

# Build the Vim command line
VimCmdScript="let g:autovim_cmd=[$ParamsArray\"\"]"
VimTmpScript="let g:autovim_tmp=\"$StdOutTempFile\""
VimLaunch="vim -u ${0%/*}/../src/vimrc.vim --not-a-term -c '$VimCmdScript' -c '$VimTmpScript' -S '${0%/*}/../src/autovim.vim'"

# Launch
eval "$VimLaunch"

# If the in temp file was used clear it
if [ -f "$StdInTempFile" ]; then
	rm "$StdInTempFile"
fi

# If the out temp file was used, print to stdout and clear it
if [ -f "$StdOutTempFile" ]; then
	cat "$StdOutTempFile"
	rm "$StdOutTempFile"
fi

